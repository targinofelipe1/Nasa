"use client";

import { useState, useMemo } from "react";
import { toast } from "sonner";
import { Loader2, SquarePen, ArrowLeft, ArrowRight } from "lucide-react";
import { useAuth } from "@clerk/nextjs";

import {
  DialogHeader,
  DialogTitle,
  DialogDescription,
} from "@/components/ui/Dialog";
import { Button } from "@/components/ui/Button";
import { Input } from "@/components/ui/Input";

// üîπ SETORES
const setores = [
  "Prote√ß√£o Social B√°sica",
  "Prote√ß√£o Social Especial de M√©dia Complexidade",
  "Prote√ß√£o Social Especial de Alta Complexidade",
  "Diretoria do SUAS",
  "Seguran√ßa Alimentar",
  "Engenharia",
  "FUNCEP",
  "Casa da Cidadania",
  "SINE",
  "Cadastro √önico e Bolsa Fam√≠lia",
  "Vigil√¢ncia Socioassistencial",
];

// üîπ REGI√ïES E MUNIC√çPIOS
const regioes: Record<string, string[]> = {
  "1¬™": ["ALHANDRA","BAYEUX","CAAPOR√É","CABEDELO","CONDE","CRUZ DO ESP√çRITO SANTO","LUCENA","MARI","PITIMBU","RIACH√ÉO DO PO√áO","SANTA RITA","SAP√â","SOBRADO","JO√ÉO PESSOA"],
  "2¬™": ["ALAGOINHA","ARA√áAGI","ARARUNA","BANANEIRAS","BEL√âM","BORBOREMA","CACIMBA DE DENTRO","CAI√áARA","CASSERENGUE","CUITEGI","DONA IN√äS","DUAS ESTRADAS","GUARABIRA","LOGRADOURO","MULUNGU","PIL√ïES","PIL√ïEZINHOS","PIRPIRITUBA","RIACH√ÉO","SERRA DA RAIZ","SERRARIA","SERT√ÉOZINHO","SOL√ÇNEA","TACIMA"],
  "3¬™": ["ALAGOA GRANDE","ALAGOA NOVA","ALCANTIL","ALGOD√ÉO DE JANDA√çRA","ARARA","AREIA","AREIAL","AROEIRAS","ASSUN√á√ÉO","BARRA DE SANTANA","BARRA DE S√ÉO MIGUEL","BOA VISTA","BOQUEIR√ÉO","CATURIT√â","CABACEIRAS","ESPERAN√áA","FAGUNDES","GADO BRAVO","JUAZEIRINHO","LAGOA SECA","LIVRAMENTO","MASSARANDUBA","MATINHAS","MONTADAS","NATUBA","OLIVEDOS","POCINHOS","PUXINAN√É","QUEIMADAS","REM√çGIO","RIACHO DE SANTO ANT√îNIO","SANTA CEC√çLIA","S√ÉO DOMINGOS DO CARIRI","S√ÉO SEBASTI√ÉO DE LAGOA DE RO√áA","SOLEDADE","TAPERO√Å","TEN√ìRIO","UMBUZEIRO","CAMPINA GRANDE"],
  "4¬™": ["BARA√öNA","BARRA DE SANTA ROSA","CUBATI","CUIT√â","DAMI√ÉO","FREI MARTINHO","NOVA FLORESTA","NOVA PALMEIRA","PEDRA LAVRADA","PICU√ç","S√ÉO VICENTE DO SERID√ì","SOSS√äGO"],
  "5¬™": ["AMPARO","CAMALA√ö","CARA√öBAS","CONGO","COXIXOLA","GURJ√ÉO","MONTEIRO","OURO VELHO","PARARI","PRATA","SANTO ANDR√â","S√ÉO JO√ÉO DO CARIRI","S√ÉO JO√ÉO DO TIGRE","S√ÉO JOS√â DOS CORDEIROS","S√ÉO SEBASTI√ÉO DO UMBUZEIRO","SERRA BRANCA","SUM√â","ZABEL√ä"],
  "6¬™": ["AREIA DE BARA√öNAS","CACIMBA DE AREIA","CACIMBAS","CATINGUEIRA","DESTERRO","EMAS","JUNCO DO SERID√ì","M√ÉE D'√ÅGUA","MALTA","MATUR√âIA","PASSAGEM","PATOS","QUIXABA","SALGADINHO","SANTA LUZIA","SANTA TERESINHA","S√ÉO JOS√â DE ESPINHARAS","S√ÉO JOS√â DO BONFIM","S√ÉO JOS√â DO SABUGI","S√ÉO MAMEDE","TEIXEIRA","V√ÅRZEA"],
  "7¬™": ["AGUIAR","BOA VENTURA","CONCEI√á√ÉO","COREMAS","CURRAL VELHO","DIAMANTE","IBIARA","IGARACY","ITAPORANGA","NOVA OLINDA","OLHO D'√ÅGUA","PEDRA BRANCA","PIANC√ì","SANTA IN√äS","SANTANA DE MANGUEIRA","SERRA GRANDE","SANTANA DOS GARROTES","S√ÉO JOS√â DE CAIANA"],
  "8¬™": ["BEL√âM DO BREJO DO CRUZ","BOM SUCESSO","BREJO DO CRUZ","BREJO DOS SANTOS","CATOL√â DO ROCHA","JERIC√ì","MATO GROSSO","RIACHO DOS CAVALOS","S√ÉO BENTO","S√ÉO JOS√â DO BREJO DO CRUZ"],
  "9¬™": ["BERNARDINO BATISTA","BONITO DE SANTA F√â","BOM JESUS","CACHOEIRA DOS √çNDIOS","CAJAZEIRAS","CARRAPATEIRA","JOCA CLAUDINO","MONTE HOREBE","PO√áO DANTAS","PO√áO DE JOS√â DE MOURA","SANTA HELENA","S√ÉO JO√ÉO DO RIO DO PEIXE","S√ÉO JOS√â DE PIRANHAS","TRIUNFO","UIRA√öNA"],
  "10¬™": ["LASTRO","MARIZ√ìPOLIS","NAZAREZINHO","SANTA CRUZ","S√ÉO FRANCISCO","S√ÉO JOS√â DA LAGOA TAPADA","SOUSA","VIEIR√ìPOLIS"],
  "11¬™": ["√ÅGUA BRANCA","IMACULADA","JURU","MANA√çRA","PRINCESA ISABEL","S√ÉO JOS√â DE PRINCESA","TAVARES"],
  "12¬™": ["CALDAS BRAND√ÉO","GURINH√âM","ING√Å","ITABAIANA","ITATUBA","JUAREZ T√ÅVORA","JURIPIRANGA","MOGEIRO","PEDRAS DE FOGO","PILAR","RIACH√ÉO DO BACAMARTE","SALGADO DE S√ÉO F√âLIX","S√ÉO JOS√â DOS RAMOS","S√ÉO MIGUEL DE TAIPU","SERRA REDONDA"],
  "13¬™": ["APARECIDA","CAJAZEIRINHAS","CONDADO","LAGOA","PAULISTA","POMBAL","S√ÉO BENTINHO","S√ÉO DOMINGOS","VISTA SERRANA"],
  "14¬™": ["BA√çA DA TRAI√á√ÉO","CAPIM","CUIT√â DE MAMANGUAPE","CURRAL DE CIMA","ITAPOROROCA","JACARA√ö","LAGOA DE DENTRO","MAMANGUAPE","MARCA√á√ÉO","MATARACA","PEDRO R√âGIS","RIO TINTO"],
};

// üîπ DESCRI√á√ÉO
const descricoes = [
  "Programa Estadual de Prote√ß√£o aos Defensores de Direitos Humanos - PEPDDH",
  "Programa de Prote√ß√£o √† V√≠timas e Testemunhas - PROVITA",
  "Programa de Prote√ß√£o a Crian√ßas e Adolescentes Amea√ßadas de Morte - PPCAAM",
  "Abrigamento dos Ind√≠genas Venezuelanos Migrantes Refugiados da etnia Warao",
  "N√∫cleo Estadual de Enfrentamento ao Tr√°fico de Pessoas da Para√≠ba",
  "Projeto Acolher",
  "Capacita SUAS",
  "Abono natalino",
  "T√° na mesa",
  "Restaurante Popular",
  "Novo T√° na mesa",
  "Cart√£o Alimenta√ß√£o",
  "PAA - LEITE",
  "PAA - CDS",
  "Cistenas",
  "Para√≠ba que Acolhe",
  "Cofinanciamento para CRAS, CREAS, UNIDADES DE ACOLHIMENTO, GEST√ÉO MUNICIPAIS E BENEFICIOS EVENTUAIS",
  "Programa Cidade Madura",
  "Outro",
];

// üîπ PROGRAMAS
const programas = [
  "5008 - Assist√™ncia Social, Direitos Humanos e Prote√ß√£o Social",
  "5009 - Assist√™ncia Social, Direitos Humanos e Prote√ß√£o Social",
  "(Novo PAC) 960186",
  "Trabalhadores(as)",
  "5008 - Assist√™ncia Social - Direitos Humanos e Prote√ß√£o Social",
  "5008 - Assist√™ncia Social - Direitos",
  "500 - Seguran√ßa Alimentar - Direitos",
  "PAA ALIMENTOS",
];

// üîπ A√á√ïES
const acoes = [
  "BENEFICI√ÅRIOS",
  "TRANSFER√äNCIA DE RENDA",
  "REFEI√á√ïES DI√ÅRIAS",
  "CISTERNAS",
  "BENEFICI√ÅRIOS ‚Äì PESSOA IDOSA",
  "SERVI√áO DE ACOLHIMENTO CRIAN√áA E ADOLESCENTE",
  "SERVI√áO DE ACOLHIMENTO FAM√çLIAS E ADULTOS",
  "BENEFICI√ÅRIOS ‚Äì (√ìRF√ÉOS DECORRENTE DA COVID-19)",
  "DOCUMENTA√á√ÉO B√ÅSICA",
];

// üîπ STATUS
const statusOptions = [
  "Cont√≠nuo",
  "A√ß√µes e/ou obras a iniciar, em licita√ß√£o ou a licitar",
  "A iniciar",
  "A√ß√µes e/ou obras conclu√≠das",
  "Conclu√≠do",
  "Em andamento",
  "A inaugurar (2025)/Lan√ßar",
  "Paralisado",
];

interface TableData {
  [key: string]: any;
}

interface UpdateOdeModalProps {
  rowData: TableData;
  rowIndex: number;
  onUpdate: () => void;
  onClose: () => void;
  activeTab: string;
  tabGroups: { [key: string]: string[] };
}

export default function UpdateOdeModal({
  rowData,
  rowIndex,
  onUpdate,
  onClose,
  activeTab,
  tabGroups,
}: UpdateOdeModalProps) {
  const { userId } = useAuth();
  const [loading, setLoading] = useState(false);
  const [currentStep, setCurrentStep] = useState(0);
  const [values, setValues] = useState<TableData>(rowData);

  // Campos edit√°veis
  const editableKeys = useMemo(() => {
    const currentTabKeys = tabGroups[activeTab] || [];
    return currentTabKeys.filter(
      (key) => key !== "C√ìDIGO IBGE" && key !== "Munic√≠pio" && key !== "NOME"
    );
  }, [activeTab, tabGroups]);

  const handleUpdate = async (shouldClose: boolean) => {
    setLoading(true);

    try {
      const updates = editableKeys.map((key) => ({
        key,
        row: rowData.__rowNumber || rowIndex + 2,
        originalValue: rowData[key],
        value: values[key],
      }));

      const payload = {
        updates,
        programa: "ode",
        userId,
        municipio: rowData["Munic√≠pio"],
      };

      const response = await fetch(`/api/ode`, {
        method: "PATCH",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(payload),
      });

      if (!response.ok) throw new Error("Erro ao atualizar");

      toast.success("Dados atualizados com sucesso!");
      onUpdate();
      if (shouldClose) onClose();
    } catch (error: any) {
      console.error("‚ùå Erro ao atualizar:", error);
      toast.error(error.message || "Erro ao atualizar");
    } finally {
      setLoading(false);
    }
  };

  if (editableKeys.length === 0) {
    return (
      <div className="p-4 text-center">
        <p>N√£o h√° campos edit√°veis nesta aba.</p>
        <Button onClick={onClose} className="mt-4">
          Fechar
        </Button>
      </div>
    );
  }

  const currentKey = editableKeys[currentStep];

  // üîπ Mapa de campos ‚Üí op√ß√µes
  const fieldOptions: Record<string, string[]> = {
    "Setor de Trabalho": setores,
    Regi√£o: Object.keys(regioes),
    Munic√≠pio: values["Regi√£o"] ? regioes[values["Regi√£o"]] || [] : [],
    Descri√ß√£o: descricoes,
    "Programa/Projeto/Entidade": programas,
    A√ß√£o: acoes,
    Status: statusOptions,
    Obra: ["Sim", "N√£o"],
    Servi√ßo: ["Sim", "N√£o"],
  };

  const options = fieldOptions[currentKey] || null;

  return (
    <>
      <DialogHeader className="p-4 border-b">
        <DialogTitle>Atualizar Dados do Munic√≠pio</DialogTitle>
        <DialogDescription>
          Munic√≠pio: <strong>{rowData["Munic√≠pio"]}</strong>
        </DialogDescription>
      </DialogHeader>

      <div className="p-4 space-y-4">
        <div>
          <label className="text-sm font-medium">{currentKey}</label>
          {options ? (
            <select
              value={values[currentKey] || ""}
              onChange={(e) =>
                setValues((prev) => ({ ...prev, [currentKey]: e.target.value }))
              }
              disabled={loading}
              className="mt-2 w-full border rounded-md p-2 text-sm"
            >
              <option value="">Selecione...</option>
              {options.map((opt) => (
                <option key={opt} value={opt}>
                  {opt}
                </option>
              ))}
            </select>
          ) : (
            <Input
              type="text"
              value={values[currentKey] || ""}
              onChange={(e) =>
                setValues((prev) => ({ ...prev, [currentKey]: e.target.value }))
              }
              disabled={loading}
              className="mt-2"
            />
          )}
        </div>
      </div>

      <div className="flex justify-between p-4 border-t gap-2 items-center">
        <Button variant="outline" onClick={onClose} disabled={loading}>
          Cancelar
        </Button>

        <div className="flex space-x-2">
          {currentStep > 0 && (
            <Button
              variant="ghost"
              onClick={() => setCurrentStep((prev) => prev - 1)}
              disabled={loading}
            >
              <ArrowLeft className="mr-2 h-4 w-4" /> Anterior
            </Button>
          )}

          <Button onClick={() => handleUpdate(true)} disabled={loading}>
            {loading ? (
              <>
                <Loader2 className="mr-2 h-4 w-4 animate-spin" />
                Salvando...
              </>
            ) : (
              <>
                <SquarePen className="mr-2 h-4 w-4" /> Salvar
              </>
            )}
          </Button>

          {currentStep < editableKeys.length - 1 && (
            <Button
              onClick={() => setCurrentStep((prev) => prev + 1)}
              disabled={loading}
            >
              Pr√≥ximo <ArrowRight className="ml-2 h-4 w-4" />
            </Button>
          )}
        </div>
      </div>
    </>
  );
}
